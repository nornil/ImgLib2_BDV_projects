{
  "hash": "9796c996d470050e8160996f00f38287",
  "result": {
    "markdown": "---\ntitle: \"BigDataProcessor2\"\ncategories: [ imglib2 , n5,   hdf5 ,  zarr  , jupyter,   notebook] \nexecute:\n  echo: false\nabout: \n  id: Aheading\n  template: jolla\n  image-shape: rounded\n  image-width: 15em\n  links:\n    - text: Contact\n      icon: envelope\n      href: mailto:anemail@adress.com\n---\n\n\n ![](BDP2-icon.png){width=200}\n \n# Load some data\n\n\n::: {.cell}\n\n:::\n\n\nNow, we register a simple renderer that uses [ImgLib2's ImageJ bridge](https://github.com/imglib/imglib2-ij/blob/master/src/main/java/net/imglib2/img/display/imagej/ImageJFunctions.java) and [Spencer Park's image renderer](https://github.com/SpencerPark/jupyter-jvm-basekernel/blob/master/src/main/java/io/github/spencerpark/jupyter/kernel/display/common/Image.java) to render the first 2D slice of a `RandomAccessibleInterval` into the notebook.  We also add a renderer for arrays and maps, because we want to list directories and attributes maps later.\"\n ",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}